// <auto-generated />
using System;
using Funilaria.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Funilaria.Infra.Data.Migrations
{
    [DbContext(typeof(FunilariaContext))]
    partial class FunilariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Funilaria.Dominio.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Municipio")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PlacaCarro")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Marca")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("Funilaria.Dominio.Entidades.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarcaVeiculo")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<Guid?>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Funilaria.Dominio.Entidades.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OrcamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Problema")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ValorProblema")
                        .HasMaxLength(15)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Funilaria.Dominio.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdMarca")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModeloVeiculo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Funilaria.Dominio.Orcamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCarro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdServico")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ValorTotal")
                        .HasMaxLength(10)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("Funilaria.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DateTime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Funilaria.Dominio.Carro", b =>
                {
                    b.HasOne("Funilaria.Dominio.Usuario", "Usuario")
                        .WithMany("Carros")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Funilaria.Dominio.Entidades.Marca", b =>
                {
                    b.HasOne("Funilaria.Dominio.Modelo", null)
                        .WithMany("Marcas")
                        .HasForeignKey("ModeloId");

                    b.HasOne("Funilaria.Dominio.Usuario", null)
                        .WithMany("Marcas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Funilaria.Dominio.Entidades.Servico", b =>
                {
                    b.HasOne("Funilaria.Dominio.Orcamento", null)
                        .WithMany("Servicos")
                        .HasForeignKey("OrcamentoId");

                    b.HasOne("Funilaria.Dominio.Usuario", null)
                        .WithMany("Servicos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Funilaria.Dominio.Modelo", b =>
                {
                    b.HasOne("Funilaria.Dominio.Usuario", null)
                        .WithMany("Modelos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Funilaria.Dominio.Orcamento", b =>
                {
                    b.HasOne("Funilaria.Dominio.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId");

                    b.HasOne("Funilaria.Dominio.Entidades.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId");

                    b.HasOne("Funilaria.Dominio.Usuario", null)
                        .WithMany("Orcamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Carro");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Funilaria.Dominio.Modelo", b =>
                {
                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("Funilaria.Dominio.Orcamento", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Funilaria.Dominio.Usuario", b =>
                {
                    b.Navigation("Carros");

                    b.Navigation("Marcas");

                    b.Navigation("Modelos");

                    b.Navigation("Orcamentos");

                    b.Navigation("Servicos");
                });
#pragma warning restore 612, 618
        }
    }
}
